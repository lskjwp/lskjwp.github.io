<?xml version="1.0" standalone="no"?><?xml-stylesheet type="text/css" href="https://www.processon.com/themes/default/mind/icons/icons.css" ?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xlink="http://www.w3.org/1999/xlink" id="mind-svg-con" width="2462.437515258789px" height="1565.7125244140625px" style="position: absolute; left: 0px; top: 0px; width: 2462.44px; height: 1565.71px; background: rgb(248, 248, 248); z-index: 999;"><defs></defs><g id="svgbackgroundid"><defs></defs><rect x="0" y="0" width="2462.437515258789" height="1565.7125244140625" fill="#f8f8f8"></rect></g><g transform="translate(-9884.500579833984, -9156.000183105469)" id="sdjakdjak3"><defs></defs><g class="svg-topic-con" transform="translate(0.5,0.5)"><path part="right" sub="true" id="line_b40273083232" d="M 10000.499816894531 9939.000396728516 L 10000.499816894531 9317.000366210938 A 8 8 0 0 1 10008.499816894531 9309.000366210938 L 10146.499816894531 9309.000366210938" stroke="rgb(160,160,160)" fill="none" stroke-width="1"></path><path part="right" sub="true" id="line_1199b2fb8493" d="M 10000.499816894531 9939.000396728516 L 10000.499816894531 10067.000366210938 A 8 8 0 0 0 10008.499816894531 10075.000366210938 L 10146.499816894531 10075.000366210938" stroke="rgb(160,160,160)" fill="none" stroke-width="1"></path></g><g class="svg-connection-con" transform="translate(0.5,0.5)"></g><g class="svg-freesums-con" transform="translate(0.5,0.5)"></g><g class="svg-freebos-con" transform="translate(0.5,0.5)"></g></g><g id="1199b2fb8493"><rect x="262.0000057220459" y="898.5500183105469" rx="5px" ry="5px" width="221" height="41" style="fill: #ffffff; stroke:rgb(157,157,157);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="275.00000607967377" y="926.7625152587891"><tspan>SpringMVC处理web请求</tspan></tspan></text></g></g><g id="71d56d6d6fb7"><rect x="512.4375152587891" y="338.0874938964844" rx="1px" ry="1px" width="48" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="521.4375152587891" y="353.9750183105469"><tspan>注解</tspan></tspan></text></g></g><g id="530613234e32"><rect x="590.4375" y="303" rx="1px" ry="1px" width="374" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="599.4375" y="318.8874938964844"><tspan>1、@Controller：创建控制器类的对象，接收请求，处理请求</tspan></tspan></text></g></g><g id="8bdddae19932"><rect x="590.4375" y="355.625" rx="1px" ry="1px" width="497" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="599.4375" y="371.5124938964844"><tspan>2、@RequestMapping：请求映射，把请求绑定到一个方法，让这个方法处理请求</tspan></tspan></text></g></g><g id="4f96b8c7d42f"><rect x="1117.1750183105469" y="338.0874938964844" rx="1px" ry="1px" width="192" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1126.1750183105469" y="353.9750183105469"><tspan>1、value：请求的url，唯一值</tspan></tspan></text></g></g><g id="4fd98e4cc7f4"><rect x="1117.1750183105469" y="373.1750183105469" rx="1px" ry="1px" width="609" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1126.1750183105469" y="389.06251220703126"><tspan>2、method：请求的方式，使用RequestMethod类的枚举值（例如get请求：RequestMethod.GET）</tspan></tspan></text></g></g><g id="645915faf9fc"><rect x="512.4375152587891" y="495.9750061035156" rx="1px" ry="1px" width="135" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="521.4375152587891" y="511.8625152587891"><tspan>接收用户提交的参数</tspan></tspan></text></g></g><g id="b0cfbd09a34a"><rect x="677.4375" y="408.26251220703125" rx="1px" ry="1px" width="611" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="686.4375" y="424.15000610351564"><tspan>1、HttpServletRequest，HttpServletResponse，HttpSession可以直接出现在处理器方法的参数位置</tspan></tspan></text></g></g><g id="090c5053c649"><rect x="677.4375" y="443.3500061035156" rx="1px" ry="1px" width="468" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="686.4375" y="459.2375152587891"><tspan>2、逐个接收参数，处理器方法的形参名和请求中参数名一样。按名称对应赋值</tspan></tspan></text></g></g><g id="fcc48f9d8f71"><rect x="677.4375" y="478.43751525878906" rx="1px" ry="1px" width="540" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="686.4375" y="494.32500915527345"><tspan>3、解决请求中post方式有中文乱码，使用过滤器（CharacterEncodingFilter）解决问题。</tspan></tspan></text></g></g><g id="ce442b3b62fe"><rect x="677.4375" y="513.5250091552734" rx="1px" ry="1px" width="467" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="686.4375" y="529.4125030517578"><tspan>4、逐个接收时，请求中参数名和形参名不一致，使用@RequestParam可解决</tspan></tspan></text></g></g><g id="2cb415a56afd"><rect x="677.4375" y="548.6125106811523" rx="1px" ry="1px" width="402" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="686.4375" y="564.5000122070312"><tspan>5、使用java对象接收请求的参数，要求请求中参数名和属性名一致</tspan></tspan></text></g></g><g id="934c86aeff55"><rect x="677.4375" y="583.7000122070312" rx="1px" ry="1px" width="374" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="686.4375" y="599.5875137329101"><tspan>6、springmvc处理器方法的形参可以是Map，List等集合类型</tspan></tspan></text></g></g><g id="f85b76faef16"><rect x="512.4375152587891" y="724.0500144958496" rx="1px" ry="1px" width="265" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="521.4375152587891" y="739.9375122070312"><tspan>处理器方法的返回值：表示请求的处理结果</tspan></tspan></text></g></g><g id="425a89273982"><rect x="807.4375305175781" y="618.7875099182129" rx="1px" ry="1px" width="365" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="816.4375305175781" y="634.6750114440918"><tspan>1、ModelAndView：表示数据和视图，对视图执行forward</tspan></tspan></text></g></g><g id="0ca4178ab8bd"><rect x="807.4375305175781" y="653.8750123977661" rx="1px" ry="1px" width="475" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="816.4375305175781" y="669.7625120162963"><tspan>2、String：表示视图的，可以是逻辑名称、完整视图路径，对视图执行forward</tspan></tspan></text></g></g><g id="8bd0ced47fb7"><rect x="807.4375305175781" y="688.9625129699707" rx="1px" ry="1px" width="376" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="816.4375305175781" y="704.8500125885009"><tspan>3、void：返回值本身不能表示数据和视图，可以响应ajax请求</tspan></tspan></text></g></g><g id="e0b696c063c8"><rect x="807.4375305175781" y="724.0500144958496" rx="1px" ry="1px" width="273" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="816.4375305175781" y="739.9375122070312"><tspan>4、对象Object：表示数据的，响应ajax请求</tspan></tspan></text></g></g><g id="9a2a8a0018d8"><rect x="807.4375305175781" y="794.2250137329102" rx="1px" ry="1px" width="362" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="816.4375305175781" y="810.112515258789"><tspan>5、springmvc处理器方法返回对象，转为json响应ajax步骤</tspan></tspan></text></g></g><g id="6b7512f93223"><rect x="1198.8625183105469" y="759.1375122070312" rx="1px" ry="1px" width="292" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1207.8625183105469" y="775.0250137329101"><tspan>1、加入处理java到json转换的工具库：jackson</tspan></tspan></text></g></g><g id="2befebb1ff52"><rect x="1198.8625183105469" y="794.2250137329102" rx="1px" ry="1px" width="435" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1207.8625183105469" y="810.112515258789"><tspan>2、在springmvc配置文件中加入注解驱动：&lt;mvc:annotation-driver/&gt;</tspan></tspan></text></g></g><g id="c95aa3894c4d"><rect x="1198.8625183105469" y="829.3125152587891" rx="1px" ry="1px" width="286" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1207.8625183105469" y="845.2000091552734"><tspan>3、在处理器方法的上面加入@ResponseBody</tspan></tspan></text></g></g><g id="6376d0600747"><rect x="512.4375152587891" y="917.0250091552734" rx="1px" ry="1px" width="86" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="521.4375152587891" y="932.9125183105468"><tspan>url-pattern</tspan></tspan></text></g></g><g id="63114d561efb"><rect x="628.0250244140625" y="864.4000091552734" rx="1px" ry="1px" width="554" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="637.0250244140625" y="880.2875183105468"><tspan>设置中央调度器的url-pattern是"/"：导致静态资源访问失败（404），动态代理可以正常访问</tspan></tspan></text></g></g><g id="f4614667ad0b"><rect x="628.0250244140625" y="917.0250091552734" rx="1px" ry="1px" width="828" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="637.0250244140625" y="932.9125183105468"><tspan>第一种解决静态资源访问的方案：原理是给程序内存中增加一个处理器对象，DefaultHttpRequestHandler，让这个对象处理静态资源的访问</tspan></tspan></text></g></g><g id="2c17d3437bc1"><rect x="1486.1500549316406" y="917.0250091552734" rx="1px" ry="1px" width="213" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1495.1500549316406" y="932.9125183105468"><tspan>在springmvc的配置文件中，加入</tspan></tspan></text></g></g><g id="e4a4d6386c05"><rect x="1728.7500305175781" y="899.4875183105469" rx="1px" ry="1px" width="235" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1737.7500305175781" y="915.3750122070312"><tspan>1、&lt;mvc:default-servlet-handler/&gt;</tspan></tspan></text></g></g><g id="89dcc91c3537"><rect x="1728.7500305175781" y="934.5750122070312" rx="1px" ry="1px" width="205" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1737.7500305175781" y="950.4625061035156"><tspan>2、&lt;mvc:annotation-driven/&gt;</tspan></tspan></text></g></g><g id="cefe1f8e1f31"><rect x="628.0250244140625" y="969.6625061035156" rx="1px" ry="1px" width="213" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="637.0250244140625" y="985.5500305175781"><tspan>第二种解决静态资源访问的方案：</tspan></tspan></text></g></g><g id="4b101c0e4bca"><rect x="871.0249938964844" y="969.6625061035156" rx="1px" ry="1px" width="405" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="880.0249938964844" y="985.5500305175781"><tspan>使用框架中的mvc:resources标签，由框架自己处理静态资源的访问</tspan></tspan></text></g></g><g id="c260e51cb016"><rect x="512.4375152587891" y="1127.5500183105469" rx="1px" ry="1px" width="72" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="521.4375152587891" y="1143.4375122070312"><tspan>SSM整合</tspan></tspan></text></g></g><g id="03c79e95fcd2"><rect x="614.1500244140625" y="1022.2875061035156" rx="1px" ry="1px" width="137" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="623.1500244140625" y="1038.175030517578"><tspan>SSM整个有两个容器</tspan></tspan></text></g></g><g id="260f4106bc78"><rect x="780.8625183105469" y="1004.7500305175781" rx="1px" ry="1px" width="313" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="789.8625183105469" y="1020.6375244140625"><tspan>1、SpringMVC容器：管理controller、视图等对象</tspan></tspan></text></g></g><g id="427897b9bb7a"><rect x="780.8625183105469" y="1039.8375244140625" rx="1px" ry="1px" width="237" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="789.8625183105469" y="1055.7250183105468"><tspan>2、Spring容器：service、dao等对象</tspan></tspan></text></g></g><g id="3a1f15b13dce"><rect x="614.1500244140625" y="1092.4625244140625" rx="1px" ry="1px" width="109" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="623.1500244140625" y="1108.3500183105468"><tspan>创建容器的方式</tspan></tspan></text></g></g><g id="e8312807720a"><rect x="753.1500244140625" y="1074.9250183105469" rx="1px" ry="1px" width="414" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="762.1500244140625" y="1090.8125122070312"><tspan>1、创建SpringMVC的容器对象：使用中央调度器DispatcherServlet</tspan></tspan></text></g></g><g id="ffd22be769d4"><rect x="753.1500244140625" y="1110.0125122070312" rx="1px" ry="1px" width="375" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="762.1500244140625" y="1125.9000061035156"><tspan>2、创建Spring容器对象，使用监听器ContextLoaderListener</tspan></tspan></text></g></g><g id="6c2da2928c5a"><rect x="614.1500244140625" y="1197.7250366210938" rx="1px" ry="1px" width="70" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="623.1500244140625" y="1213.6125"><tspan>配置文件</tspan></tspan></text></g></g><g id="1586a230b736"><rect x="714.1500244140625" y="1145.1000061035156" rx="1px" ry="1px" width="162" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="723.1500244140625" y="1160.987530517578"><tspan>1、SpringMVC配置文件</tspan></tspan></text></g></g><g id="1b4f33d9814c"><rect x="714.1500244140625" y="1180.1875" rx="1px" ry="1px" width="131" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="723.1500244140625" y="1196.0750244140625"><tspan>2、Spring配置文件</tspan></tspan></text></g></g><g id="3872d0429125"><rect x="714.1500244140625" y="1215.2750244140625" rx="1px" ry="1px" width="153" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="723.1500244140625" y="1231.162548828125"><tspan>3、Mybatis主配置文件</tspan></tspan></text></g></g><g id="1a6be46f8962"><rect x="714.1500244140625" y="1250.362548828125" rx="1px" ry="1px" width="169" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="723.1500244140625" y="1266.2500122070312"><tspan>4、数据库的属性配置文件</tspan></tspan></text></g></g><g id="47cb031ff81a"><rect x="512.4375152587891" y="1397.737548828125" rx="1px" ry="1px" width="70" height="26" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="521.4375152587891" y="1413.6250122070312"><tspan>核心技术</tspan></tspan></text></g></g><g id="de68493f8833"><rect x="612.4375" y="1320.5375366210938" rx="1px" ry="1px" width="96" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="621.4375" y="1336.425"><tspan>转发和重定向</tspan></tspan></text></g></g><g id="184aff29f175"><rect x="738.4375" y="1285.4500122070312" rx="1px" ry="1px" width="106" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="747.4375" y="1301.3375366210937"><tspan>转发：forward</tspan></tspan></text></g></g><g id="39deb3946b37"><rect x="738.4375" y="1320.5375366210938" rx="1px" ry="1px" width="118" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="747.4375" y="1336.425"><tspan>重定向：redirect</tspan></tspan></text></g></g><g id="993818efe4e1"><rect x="738.4375" y="1355.625" rx="1px" ry="1px" width="395" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="747.4375" y="1371.5125244140625"><tspan>特点：都不同视图解析器一同工作，就当项目中不存在视图解析器</tspan></tspan></text></g></g><g id="7bbb16761ae2"><rect x="612.4375" y="1450.362548828125" rx="1px" ry="1px" width="57" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="621.4375" y="1466.2500122070312"><tspan>拦截器</tspan></tspan></text></g></g><g id="61d48de302b5"><rect x="699.4375" y="1450.362548828125" rx="1px" ry="1px" width="332" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="708.4375" y="1466.2500122070312"><tspan>拦截器实现HandlerInterceptor接口，其中有三个方法</tspan></tspan></text></g></g><g id="dfeaba68114e"><rect x="1061.1000061035156" y="1396.362548828125" rx="1px" ry="1px" width="301" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1070.1000061035156" y="1412.2500122070312"><tspan>preHandle(request, response, Object handler)</tspan></tspan></text></g></g><g id="ac43cb7c3620"><rect x="1392.2875061035156" y="1390.7125244140625" rx="1px" ry="1px" width="918" height="37" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1401.2875061035156" y="1405.5125244140625"><tspan>该方法在处理器方法执行之前执行。其返回值为 boolean，若为 true，则紧接着会执行处理器方法，且会将 afterCompletion()方法放入到一个专门的方法栈中等待执行。</tspan></tspan></text></g></g><g id="cc8c34a09af8"><rect x="1061.1000061035156" y="1450.362548828125" rx="1px" ry="1px" width="410" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1070.1000061035156" y="1466.2500122070312"><tspan>postHandle(request, response, Object handler, modelAndView)</tspan></tspan></text></g></g><g id="1e3d9ec0524a"><rect x="1501.0124816894531" y="1437.112548828125" rx="1px" ry="1px" width="910" height="52" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1510.0124816894531" y="1451.912548828125"><tspan>该方法在处理器方法执行之后执行。处理器方法若最终未被执行，则该方法不会执行。</tspan></tspan><tspan x="1510.0124816894531" y="1469.912548828125"><tspan> </tspan></tspan><tspan x="1510.0124816894531" y="1487.912548828125"><tspan>由于该方法是在处理器方法执行完后执行，且该方法参数中包含 ModelAndView，所以该方法可以修改处理器方法的处理结果数据，且可以修改跳转方向。</tspan></tspan></text></g></g><g id="0727105a8dce"><rect x="1061.1000061035156" y="1504.362548828125" rx="1px" ry="1px" width="423" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1070.1000061035156" y="1520.2500122070312"><tspan>afterCompletion(request, response, Object handler, Exception ex)</tspan></tspan></text></g></g><g id="21ca744f5391"><rect x="1514.2750549316406" y="1498.7125244140625" rx="1px" ry="1px" width="918" height="37" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="1523.2750549316406" y="1513.5125244140625"><tspan>在页面渲染完毕之后执行,一般是资源回收。当 preHandle()方法返回 true 时，会将该方法放到专门的方法栈中，等到对请求进行响应的所有工作完成之后才执行该方法。即该方法是在中央调度器渲染（数据填充）了响应页面之后执行的，此时对 ModelAndView 再操</tspan></tspan><tspan x="1523.2750549316406" y="1531.5125244140625"><tspan>作也对响应无济于事。</tspan></tspan></text></g></g><g id="b40273083232"><rect x="262.0000057220459" y="132.95001220703125" rx="5px" ry="5px" width="60" height="41" style="fill: #ffffff; stroke:rgb(157,157,157);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="17px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="275.00000607967377" y="161.1625244140625"><tspan>概述</tspan></tspan></text></g></g><g id="3178862bbb36"><rect x="352.00000762939453" y="30" rx="1px" ry="1px" width="401" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="361.00000762939453" y="45.8875244140625"><tspan>SpringMVC是做web开发的框架，实际是spring框架中的一个模块</tspan></tspan></text></g></g><g id="ae2de7b01303"><rect x="352.00000762939453" y="65.0875244140625" rx="1px" ry="1px" width="918" height="37" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="361.00000762939453" y="79.8875244140625"><tspan>SpirngMVC的使用是基于Spring的容器的概念，SpringMVC会创建容器，WebApplicationContext.SpringMVC作为容器时创建和管理控制器对象的，使用@Controller创建控制器对象</tspan></tspan></text></g></g><g id="6c088c2c6d61"><rect x="352.00000762939453" y="146.57501220703125" rx="1px" ry="1px" width="122" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="361.00000762939453" y="162.4624755859375"><tspan>三层和框架的对应</tspan></tspan></text></g></g><g id="36e28f35b148"><rect x="504.00001525878906" y="111.48748779296875" rx="1px" ry="1px" width="336" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="513.0000152587891" y="127.37501220703125"><tspan>SpringMVC：界面层，接收用户请求，显示处理结果的</tspan></tspan></text></g></g><g id="bf8622c8790c"><rect x="504.00001525878906" y="146.57501220703125" rx="1px" ry="1px" width="467" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="513.0000152587891" y="162.4624755859375"><tspan>Spring：业务层，处理业务逻辑的，Spring创建Service，Dao，工具类等对象</tspan></tspan></text></g></g><g id="511179b23d0a"><rect x="504.00001525878906" y="181.66250610351562" rx="1px" ry="1px" width="341" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="513.0000152587891" y="197.55"><tspan>Mybatis：持久层，访问数据库的，对数据进行增删改查</tspan></tspan></text></g></g><g id="9be0e88b4a25"><rect x="352.00000762939453" y="234.28750610351562" rx="1px" ry="1px" width="415" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="361.00000762939453" y="250.175"><tspan>SpringMVC底层访问依然是Servlet-DispatchServlet（中央调度器）</tspan></tspan></text></g></g><g id="e0a3a2e118d2"><rect x="797.3000183105469" y="216.75" rx="1px" ry="1px" width="460" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="806.3000183105469" y="232.6374938964844"><tspan>1、创建WebApplicationContext对象，读取配置文件，进而创建控制器对象</tspan></tspan></text></g></g><g id="f7a40c0ed27a"><rect x="797.3000183105469" y="251.83749389648438" rx="1px" ry="1px" width="341" height="25" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="13px" font-weight="normal" fill="rgb(68, 68, 68)"><tspan x="806.3000183105469" y="267.7250183105469"><tspan>2、它是一个Servlet，要接收用户的请求，显示处理结果</tspan></tspan></text></g></g><g transform="translate(262.0000057220459, 303)" id="sdjakdjak0"><g id="subline_1199b2fb8493" transform="translate(0.5,-0.5)"><path id="line_71d56d6d6fb7" d="M 221 615.5 L 239 615.5 L 239 51 A 4 4 0 0 1 243 47 L 250.43746948242188 47" p="1199b2fb8493" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_530613234e32" d="M 298.4374694824219 47 L 317 47 L 317 16 A 4 4 0 0 1 321 12 L 328.43748474121094 12" p="71d56d6d6fb7" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_8bdddae19932" d="M 298.4374694824219 47 L 317 47 L 317 61 A 4 4 0 0 0 321 65 L 328.43748474121094 65" p="71d56d6d6fb7" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_4f96b8c7d42f" d="M 825.4374847412109 65 L 844 65 L 844 51 A 4 4 0 0 1 848 47 L 855.1749877929688 47" p="8bdddae19932" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_4fd98e4cc7f4" d="M 825.4374847412109 65 L 844 65 L 844 78 A 4 4 0 0 0 848 82 L 855.1749877929688 82" p="8bdddae19932" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_645915faf9fc" d="M 221 615.5 L 239 615.5 L 239 209 A 4 4 0 0 1 243 205 L 250.43746948242188 205" p="1199b2fb8493" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_b0cfbd09a34a" d="M 385.4374694824219 205 L 404 205 L 404 121 A 4 4 0 0 1 408 117 L 415.43748474121094 117" p="645915faf9fc" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_090c5053c649" d="M 385.4374694824219 205 L 404 205 L 404 156 A 4 4 0 0 1 408 152 L 415.43748474121094 152" p="645915faf9fc" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_fcc48f9d8f71" d="M 385.4374694824219 205 L 404 205 L 404 191 A 4 4 0 0 1 408 187 L 415.43748474121094 187" p="645915faf9fc" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_ce442b3b62fe" d="M 385.4374694824219 205 L 404 205 L 404 219 A 4 4 0 0 0 408 223 L 415.43748474121094 223" p="645915faf9fc" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_2cb415a56afd" d="M 385.4374694824219 205 L 404 205 L 404 254 A 4 4 0 0 0 408 258 L 415.43748474121094 258" p="645915faf9fc" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_934c86aeff55" d="M 385.4374694824219 205 L 404 205 L 404 289 A 4 4 0 0 0 408 293 L 415.43748474121094 293" p="645915faf9fc" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_f85b76faef16" d="M 221 615.5 L 239 615.5 L 239 437 A 4 4 0 0 1 243 433 L 250.43746948242188 433" p="1199b2fb8493" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_425a89273982" d="M 515.4374694824219 433 L 534 433 L 534 332 A 4 4 0 0 1 538 328 L 545.4374877810478 328" p="f85b76faef16" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_0ca4178ab8bd" d="M 515.4374694824219 433 L 534 433 L 534 367 A 4 4 0 0 1 538 363 L 545.4374877810478 363" p="f85b76faef16" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_8bd0ced47fb7" d="M 515.4374694824219 433 L 534 433 L 534 402 A 4 4 0 0 1 538 398 L 545.4374877810478 398" p="f85b76faef16" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_e0b696c063c8" d="M 515.4374694824219 433 L 534 433 L 534 433 L 545.4374877810478 433" p="f85b76faef16" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_9a2a8a0018d8" d="M 515.4374694824219 433 L 534 433 L 534 499 A 4 4 0 0 0 538 503 L 545.4374877810478 503" p="f85b76faef16" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_6b7512f93223" d="M 907.4374877810478 503 L 926 503 L 926 472 A 4 4 0 0 1 930 468 L 936.8624877929688 468" p="9a2a8a0018d8" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_2befebb1ff52" d="M 907.4374877810478 503 L 926 503 L 926 503 L 936.8624877929688 503" p="9a2a8a0018d8" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_c95aa3894c4d" d="M 907.4374877810478 503 L 926 503 L 926 534 A 4 4 0 0 0 930 538 L 936.8624877929688 538" p="9a2a8a0018d8" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_6376d0600747" d="M 221 615.5 L 239 615.5 L 239 622 A 4 4 0 0 0 243 626 L 250.43746948242188 626" p="1199b2fb8493" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_63114d561efb" d="M 336.4374694824219 626 L 355 626 L 355 577 A 4 4 0 0 1 359 573 L 366.0249786376953 573" p="6376d0600747" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_f4614667ad0b" d="M 336.4374694824219 626 L 355 626 L 355 626 L 366.0249786376953 626" p="6376d0600747" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_2c17d3437bc1" d="M 1194.0249786376953 626 L 1213 626 L 1213 626 L 1224.1500244140625 626" p="f4614667ad0b" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_e4a4d6386c05" d="M 1437.1500244140625 626 L 1456 626 L 1456 612 A 4 4 0 0 1 1460 608 L 1466.75 608" p="2c17d3437bc1" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_89dcc91c3537" d="M 1437.1500244140625 626 L 1456 626 L 1456 640 A 4 4 0 0 0 1460 644 L 1466.75 644" p="2c17d3437bc1" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_cefe1f8e1f31" d="M 336.4374694824219 626 L 355 626 L 355 675 A 4 4 0 0 0 359 679 L 366.0249786376953 679" p="6376d0600747" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_4b101c0e4bca" d="M 579.0249786376953 679 L 598 679 L 598 679 L 609.0249900817871 679" p="cefe1f8e1f31" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_c260e51cb016" d="M 221 615.5 L 239 615.5 L 239 833 A 4 4 0 0 0 243 837 L 250.43746948242188 837" p="1199b2fb8493" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_03c79e95fcd2" d="M 322.4374694824219 837 L 341 837 L 341 735 A 4 4 0 0 1 345 731 L 352.1499786376953 731" p="c260e51cb016" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_260f4106bc78" d="M 489.1499786376953 731 L 508 731 L 508 718 A 4 4 0 0 1 512 714 L 518.8624877929688 714" p="03c79e95fcd2" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_427897b9bb7a" d="M 489.1499786376953 731 L 508 731 L 508 745 A 4 4 0 0 0 512 749 L 518.8624877929688 749" p="03c79e95fcd2" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_3a1f15b13dce" d="M 322.4374694824219 837 L 341 837 L 341 805 A 4 4 0 0 1 345 801 L 352.1499786376953 801" p="c260e51cb016" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_e8312807720a" d="M 461.1499786376953 801 L 480 801 L 480 788 A 4 4 0 0 1 484 784 L 491.14998626708984 784" p="3a1f15b13dce" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_ffd22be769d4" d="M 461.1499786376953 801 L 480 801 L 480 815 A 4 4 0 0 0 484 819 L 491.14998626708984 819" p="3a1f15b13dce" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_6c2da2928c5a" d="M 322.4374694824219 837 L 341 837 L 341 903 A 4 4 0 0 0 345 907 L 352.1499786376953 907" p="c260e51cb016" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_1586a230b736" d="M 422.1499786376953 907 L 441 907 L 441 858 A 4 4 0 0 1 445 854 L 452.14998626708984 854" p="6c2da2928c5a" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_1b4f33d9814c" d="M 422.1499786376953 907 L 441 907 L 441 893 A 4 4 0 0 1 445 889 L 452.14998626708984 889" p="6c2da2928c5a" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_3872d0429125" d="M 422.1499786376953 907 L 441 907 L 441 920 A 4 4 0 0 0 445 924 L 452.14998626708984 924" p="6c2da2928c5a" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_1a6be46f8962" d="M 422.1499786376953 907 L 441 907 L 441 955 A 4 4 0 0 0 445 959 L 452.14998626708984 959" p="6c2da2928c5a" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_47cb031ff81a" d="M 221 615.5 L 239 615.5 L 239 1103 A 4 4 0 0 0 243 1107 L 250.43746948242188 1107" p="1199b2fb8493" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_de68493f8833" d="M 320.4374694824219 1107 L 339 1107 L 339 1034 A 4 4 0 0 1 343 1030 L 350.43748474121094 1030" p="47cb031ff81a" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_184aff29f175" d="M 446.43748474121094 1030 L 465 1030 L 465 998 A 4 4 0 0 1 469 994 L 476.43748474121094 994" p="de68493f8833" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_39deb3946b37" d="M 446.43748474121094 1030 L 465 1030 L 465 1030 L 476.43748474121094 1030" p="de68493f8833" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_993818efe4e1" d="M 446.43748474121094 1030 L 465 1030 L 465 1061 A 4 4 0 0 0 469 1065 L 476.43748474121094 1065" p="de68493f8833" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_7bbb16761ae2" d="M 320.4374694824219 1107 L 339 1107 L 339 1155 A 4 4 0 0 0 343 1159 L 350.43748474121094 1159" p="47cb031ff81a" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_61d48de302b5" d="M 407.43748474121094 1159 L 426 1159 L 426 1159 L 437.43748474121094 1159" p="7bbb16761ae2" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_dfeaba68114e" d="M 769.4374847412109 1159 L 788 1159 L 788 1109 A 4 4 0 0 1 792 1105 L 799.0999908447266 1105" p="61d48de302b5" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_ac43cb7c3620" d="M 1100.0999908447266 1105 L 1119 1105 L 1119 1105 L 1130.2874755859375 1105" p="dfeaba68114e" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_cc8c34a09af8" d="M 769.4374847412109 1159 L 788 1159 L 788 1159 L 799.0999908447266 1159" p="61d48de302b5" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_1e3d9ec0524a" d="M 1209.0999908447266 1159 L 1228 1159 L 1228 1159 L 1239.0125122070312 1159" p="cc8c34a09af8" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_0727105a8dce" d="M 769.4374847412109 1159 L 788 1159 L 788 1209 A 4 4 0 0 0 792 1213 L 799.0999908447266 1213" p="61d48de302b5" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_21ca744f5391" d="M 1222.0999908447266 1213 L 1241 1213 L 1241 1213 L 1252.2750244140625 1213" p="0727105a8dce" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(262.0000057220459, 30)" id="sdjakdjak1"><g id="subline_b40273083232" transform="translate(0.5,-0.5)"><path id="line_3178862bbb36" d="M 60 124 L 78 124 L 78 16 A 4 4 0 0 1 82 12 L 90 12" p="b40273083232" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_ae2de7b01303" d="M 60 124 L 78 124 L 78 57 A 4 4 0 0 1 82 53 L 90 53" p="b40273083232" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_6c088c2c6d61" d="M 60 124 L 78 124 L 78 129 L 90 129" p="b40273083232" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_36e28f35b148" d="M 212 129 L 230 129 L 230 97 A 4 4 0 0 1 234 93 L 242 93" p="6c088c2c6d61" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_bf8622c8790c" d="M 212 129 L 230 129 L 230 129 L 242 129" p="6c088c2c6d61" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_511179b23d0a" d="M 212 129 L 230 129 L 230 160 A 4 4 0 0 0 234 164 L 242 164" p="6c088c2c6d61" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_9be0e88b4a25" d="M 60 124 L 78 124 L 78 212 A 4 4 0 0 0 82 216 L 90 216" p="b40273083232" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_e0a3a2e118d2" d="M 505 216 L 523 216 L 523 203 A 4 4 0 0 1 527 199 L 535.300048828125 199" p="9be0e88b4a25" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path><path id="line_f7a40c0ed27a" d="M 505 216 L 523 216 L 523 230 A 4 4 0 0 0 527 234 L 535.300048828125 234" p="9be0e88b4a25" stroke="rgb(140,140,140)" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(30, 752.0000152587891)" id="sdjakdjak2"><g id="subline_root" transform="translate(0.5,-0.5)"></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g id="root"><rect x="30" y="752.0000152587891" rx="5px" ry="5px" width="171" height="62" style="fill: #50C28B; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="26px" font-weight="normal" fill="rgb(255, 255, 255)"><tspan x="45" y="796.1750122070313"><tspan>SpringMVC</tspan></tspan></text></g></g></svg>
